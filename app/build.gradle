apply plugin: 'com.android.application'
def keystorePropertiesFile = rootProject.file("keystore.properties")//打包文件配置
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    def version = rootProject.ext.versions
    compileSdkVersion version.compileSdkVersion
    buildToolsVersion version.buildToolsVersion
    defaultConfig {
        applicationId version.applicationId
        minSdkVersion version.minSdkVersion
        targetSdkVersion version.targetSdkVersion
        versionCode version.versionCode
        versionName version.versionName
        multiDexEnabled true
        ndk {
            abiFilters 'armeabi', 'armeabi-v7a'
        }
        javaCompileOptions {   //解决AndroidStudio 3.0的问题
            annotationProcessorOptions { includeCompileClasspath = true }
        }
        manifestPlaceholders = [CHANNEL: "AA000",]
//可用于三方sdk使用，例如极光推送的参数，可在AndroidManifest中使用，最后获取到这个参数
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            debuggable true//是否允许调试
            minifyEnabled false//是否开启代码混淆
            zipAlignEnabled true//是否优化apk文件，将apk文件中未压缩的数据在4个字节边界上对齐
            shrinkResources false//是否去除无用资源，任何在编译过程中没有用到的资源或者代码都会被删除，可以有效减小apk体积
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.release
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
//    sourceSets {
//        main {//自定义了so文件加载目录,默认so文件加载目录为:src/main/jniLibs
//            jniLibs.srcDirs = ['src/main/jniLibs']
//        }
//    }

    dexOptions {//解决编译内存溢出问题
        dexInProcess true
        preDexLibraries true
        javaMaxHeapSize "8g"
    }
    repositories {//依赖aar必须填写这个
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    def dependencies = rootProject.ext.deps
    implementation project(':frame')
    //LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.3'
    //分Dex
    implementation dependencies.multidex
    //屏幕适配
    implementation dependencies.autosize
    //walle读取渠道号
    implementation dependencies.walle
    //下载工具类
    implementation dependencies.aria.aria_core
    annotationProcessor dependencies.aria.aria_compiler
    //腾讯x5
    implementation "com.tencent.tbs.tbssdk:sdk:43903"
    //bugly异常捕获
    implementation dependencies.bugly_crashreport
    //glide图片加载
    implementation(dependencies.glide.glide) {
        exclude group: 'androidx.appcompat.app'
    }
    //other
    annotationProcessor dependencies.glide.compiler
    annotationProcessor dependencies.butterknife.compiler
    //微信支付
    implementation dependencies.wxpay
    // 支付宝支付
    implementation(name: 'alipaySdk-15.7.5-20200422171619', ext: 'aar')
}
